{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setdata","getdata","a","fetch","response","json","resp","console","log","statewise","useEffect","className","active","confirmed","deaths","recovered","lastupdatedtime","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAAe,I,YCoDAA,MA/Cf,WACE,MAAoBC,mBAAS,IAA7B,mBAAMC,EAAN,KAAWC,EAAX,KACMC,EAAO,uCAAE,8BAAAC,EAAA,sEACOC,MAAM,2CADb,cACTC,EADS,gBAEEA,EAASC,OAFX,OAETC,EAFS,OAGfC,QAAQC,IAAIF,EAAKG,UAAU,IAC3BT,EAAQM,EAAKG,UAAU,IAJR,2CAAF,qDAOb,OADAC,qBAAU,WAAKT,MAAW,IAExB,sBAAKU,UAAU,KAAf,UACA,iCAAQ,qBAAKA,UAAU,MAAf,SACP,gEAGC,uBACA,iCAAQ,qBAAKA,UAAU,MAAf,SACT,+CAAkBZ,EAAKa,cAGtB,uBACA,iCAAQ,qBAAKD,UAAU,QAAf,SACT,kDAAqBZ,EAAKc,iBAGzB,uBACA,iCAAQ,qBAAKF,UAAU,OAAf,SACT,yCAAYZ,EAAKe,cAGhB,uBACA,iCAAQ,qBAAKH,UAAU,OAAf,SACT,4CAAeZ,EAAKgB,iBAGpB,uBACA,iCAAQ,qBAAKJ,UAAU,OAAf,SACR,kDAAqBZ,EAAKiB,2BC9BhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f377eedb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState,useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nfunction App() {\n  const[data,setdata]=useState([])\n  const getdata= async ()=>{\n  const response= await fetch(\"https://data.covid19india.org/data.json\");\n  const resp=await response.json();\n  console.log(resp.statewise[0]);\n  setdata(resp.statewise[0]);\n  }\n  useEffect(()=>{getdata()},[]);\n  return (\n    <div className=\"bg\">\n    <center><div className=\"one\">\n     <h2>Ishan covid tracker(India)</h2>\n     </div>\n     </center>\n      <br/>\n      <center><div className=\"two\">\n     <h3>Active cases={data.active }</h3>\n     </div>\n     </center>\n      <br/>\n      <center><div className=\"three\">\n     <h3>Confirmed cases={data.confirmed }</h3>\n     </div>\n     </center>\n      <br/>\n      <center><div className=\"four\">\n     <h3>deaths={data.deaths }</h3>\n     </div>\n     </center>\n      <br/>\n      <center><div className=\"five\">\n     <h3>Recovered={data.recovered }</h3>\n       </div>\n     </center>\n     <br/>\n     <center><div className=\"five\">\n     <h3>lastupdatedtime={data.lastupdatedtime }</h3>\n     </div>\n     </center>\n     </div>\n    \n     \n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}